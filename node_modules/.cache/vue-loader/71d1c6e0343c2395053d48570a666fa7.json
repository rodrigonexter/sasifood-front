{"remainingRequest":"/home/rodrigo/evolution/usefood/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rodrigo/evolution/usefood/src/components/home/CardProduct.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/rodrigo/evolution/usefood/src/components/home/CardProduct.vue","mtime":1635336599062},{"path":"/home/rodrigo/evolution/usefood/node_modules/css-loader/dist/cjs.js","mtime":1635006695573},{"path":"/home/rodrigo/evolution/usefood/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635006696213},{"path":"/home/rodrigo/evolution/usefood/node_modules/postcss-loader/src/index.js","mtime":1635006695897},{"path":"/home/rodrigo/evolution/usefood/node_modules/sass-loader/dist/cjs.js","mtime":1635006696097},{"path":"/home/rodrigo/evolution/usefood/node_modules/cache-loader/dist/cjs.js","mtime":1635006695449},{"path":"/home/rodrigo/evolution/usefood/node_modules/vue-loader/lib/index.js","mtime":1635006696213}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdWx7CiAgICBsaXsKICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgICB9Cn0KCi5tYXJnaW4tYm90dG9tIHsKICBtYXJnaW4tYm90dG9tOiA1cHg7Cn0K"},{"version":3,"sources":["CardProduct.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"CardProduct.vue","sourceRoot":"src/components/home","sourcesContent":["<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-col\n        cols=\"12\"\n        class=\"\n          usefood-flex-container\n          usefood-flex-align-center\n          usefood-flex-direction-column\n          margin-bottom\n        \"\n      >\n        <ul>\n          <li v-for=\"(product, index) in products\" :key=\"index\">\n            <v-card class=\"mx-auto margin-bottom\" max-width=\"800\">\n              <v-img\n                class=\"white--text align-end\"\n                height=\"200px\"\n                :src=\"product.image[0]\"\n              >\n                <v-card-title>{{product.name}}</v-card-title>\n              </v-img>\n\n              <v-card-text class=\"text--primary\">\n                <div>{{product.description}}</div>\n              </v-card-text>\n\n              <v-card-actions>\n                <v-btn color=\"orange\" text> Editar </v-btn> \n                     \n                <DialogProduct :productId=\"products[index]._id \" \n                @refresh-list=\"getProducts\"/>\n              </v-card-actions>\n            </v-card>\n          </li>\n        </ul>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport {readProducts, findProductsByName} from '../../services/api';\nimport DialogProduct from '../home/DialogProduct';\n\n\nexport default {\n  components:{\n    DialogProduct\n  },\n  data() {\n    return {\n      products: [],\n\n    };\n  },\n\n  methods:{\n    getProducts(keyWord){\n      const response = keyWord ? findProductsByName(keyWord) : readProducts();\n      \n      response\n      .then(res => {\n      this.products = res.data;\n    });\n    }\n  },\n\n  mounted() {\n    this.getProducts();\n    this.$root.$on(\"search-products\", function(keyWord) {\n      this.getProducts(keyWord);\n\n    })\n  },\n\n\n};\n</script>\n\n<style lang=\"scss\">\nul{\n    li{\n        list-style-type: none;\n    }\n}\n\n.margin-bottom {\n  margin-bottom: 5px;\n}\n</style>"]}]}